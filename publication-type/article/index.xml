<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Article | LuminolT</title><link>https://luminolt.cn/publication-type/article/</link><atom:link href="https://luminolt.cn/publication-type/article/index.xml" rel="self" type="application/rss+xml"/><description>Article</description><generator>Hugo Blox Builder (https://hugoblox.com)</generator><language>en-us</language><lastBuildDate>Wed, 24 Apr 2024 00:00:00 +0000</lastBuildDate><image><url>https://luminolt.cn/media/icon_hu1463231102154380852.png</url><title>Article</title><link>https://luminolt.cn/publication-type/article/</link></image><item><title>Armored Core of PKI: Remove Signing Keys for CA via Physically Unclonable Function</title><link>https://luminolt.cn/publication/preprint/</link><pubDate>Wed, 24 Apr 2024 00:00:00 +0000</pubDate><guid>https://luminolt.cn/publication/preprint/</guid><description>&lt;h2 id="abstract">Abstract&lt;/h2>
&lt;p>The signing key protection for certificate authorities (CAs) is crucial in PKI. However, these keys can be exposed even in today&amp;rsquo;s infrastructure. Traditional protections fail to eliminate this risk since attackers can always capture digital leakage of the keys through various carefully designed attacks or accidental human errors. This dilemma motivates us to consider removing CA&amp;rsquo;s signing keys and propose Armored Core, a PKI security enhancement using the trusted binding of physically unclonable function (PUF) for CA.&lt;/p>
&lt;p>In Armored Core, CAs issue PUF-based X.509v3 TLS certificates, where they use PUF to generate physically trusted &amp;ldquo;signatures&amp;rdquo; for domain public keys. The PUF transparency mechanism, deployed with certificate transparency (CT), ensures the monitoring for PUF calling behaviors of CA. We formally prove the existential unforgeability of PUF endorsements in the certificates. Armored Core is integrated into real-world PKI codebases like Let&amp;rsquo;s Encrypt Pebble and Certbot. The results show that it can remove the signing key for CA without bringing any extra overhead to the original systems, but instead improves computing efficiency by &amp;gt;4.9% and saves &amp;gt;11% of storage. It can be the first effective solution that makes key exposure impossible for CA in PKI.&lt;/p>
&lt;!--
&lt;div class="alert alert-note">
&lt;div>
Create your slides in Markdown - click the &lt;em>Slides&lt;/em> button to check out the example.
&lt;/div>
&lt;/div>
Add the publication's **full text** or **supplementary notes** here. You can use rich formatting such as including [code, math, and images](https://docs.hugoblox.com/content/writing-markdown-latex/). --></description></item></channel></rss>